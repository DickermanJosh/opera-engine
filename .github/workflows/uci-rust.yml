name: UCI Rust Implementation CI

on:
  push:
    branches: [ main, develop, uci ]
    paths: 
      - 'rust/**'
      - '.github/workflows/uci-rust.yml'
  pull_request:
    branches: [ main, develop ]
    paths: 
      - 'rust/**'
      - '.github/workflows/uci-rust.yml'

jobs:
  rust-unit-tests:
    name: Rust Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          rust/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('rust/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install C++ dependencies (for FFI)
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libgtest-dev build-essential

    - name: Build C++ core (required for FFI)
      working-directory: cpp
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -G Ninja
        ninja

    - name: Check Rust formatting
      working-directory: rust
      run: cargo fmt -- --check

    - name: Run Rust linting
      working-directory: rust
      run: cargo clippy -- -D warnings

    - name: Run Rust unit tests
      working-directory: rust
      run: |
        echo "ðŸ§ª Running Rust UCI unit tests..."
        cargo test --lib --verbose
      env:
        RUST_BACKTRACE: 1